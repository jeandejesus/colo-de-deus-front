name: Build and Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Pegar o código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3️⃣ Instalar dependências
      - name: Install dependencies
        run: npm ci

      # 4️⃣ Build Angular
      - name: Build Angular
        run: npm run build -- --configuration production

      # 5️⃣ Login no Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6️⃣ Build e push da imagem Docker
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/colo-de-deus-frontend:latest

      # 7️⃣ Deploy na VPS via SSH
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/apps/docker-compose

            # Atualiza imagem do frontend
            docker-compose pull frontend

            # Garante que nginx-proxy e letsencrypt estejam rodando
            docker-compose up -d nginx-proxy letsencrypt

            # Sobe frontend
            docker-compose up -d frontend

            # Reinicia nginx-proxy para detectar novos hosts e emitir HTTPS
            docker restart nginx-proxy
